From commits at rdiffweb.org  Wed Sep  6 19:47:00 2006
From: commits at rdiffweb.org (commits at rdiffweb.org)
Date: Wed, 6 Sep 2006 19:47:00 +0200
Subject: [Rdiffweb-commits] r63 - trunk
Message-ID: <200609061747.k86Hl0TS010114@sheep.berlios.de>

Author: joshn
Date: 2006-09-06 19:46:57 +0200 (Wed, 06 Sep 2006)
New Revision: 63

Modified:
   trunk/setup.py
Log:
Fix installion on python verions <= 2.3


Modified: trunk/setup.py
===================================================================
--- trunk/setup.py	2006-06-11 17:49:43 UTC (rev 62)
+++ trunk/setup.py	2006-09-06 17:46:57 UTC (rev 63)
@@ -1,8 +1,13 @@
 #!/usr/bin/env python
 
-from distutils.core import setup
+from distutils.core import setup, Command
+import glob, sys
 
-setup(name='rdiffWeb',
+# < Python 2.4 does not have the package_data setup keyword, making installation a pain.
+# If we can, use package_data, otherwise, hack in the files
+pythonVersion = sys.version_info[0]+sys.version_info[1]/10.0
+if pythonVersion > 2.3:
+   setup(name='rdiffWeb',
       version='0.3.2',
       description='A web interface to rdiff-backup repositories',
       author='Josh Nisly',
@@ -15,3 +20,27 @@
                   ],
       scripts=['rdiff-web', 'rdiff-web-config']
      )
+else:
+   from distutils.dist import Distribution
+   import distutils.command.install
+
+   installer = distutils.command.install.install(Distribution())
+   installer.initialize_options()
+   installer.finalize_options()
+   packageDataDir = installer.config_vars['prefix']+"/lib/python"+installer.config_vars['py_version_short']+"/site-packages/rdiffWeb"
+
+   setup(name='rdiffWeb',
+      version='0.3.2',
+      description='A web interface to rdiff-backup repositories',
+      author='Josh Nisly',
+      author_email='rdiffweb at rdiffweb.org',
+      url='http://www.rdiffweb.org',
+      packages=['rdiffWeb'],
+      data_files=[('/etc/rdiffweb', ['rdw.conf.sample']),
+                  ('/etc/init.d', ['init/rdiff-web']),
+                  (packageDataDir+'/templates', glob.glob('rdiffWeb/templates/*.html')),
+                  (packageDataDir+'/templates', glob.glob('rdiffWeb/templates/*.xml')),
+                  (packageDataDir+'/static', glob.glob('rdiffWeb/static/*')),
+                  ],
+      scripts=['rdiff-web', 'rdiff-web-config']
+     )



From commits at rdiffweb.org  Thu Sep 21 04:28:14 2006
From: commits at rdiffweb.org (commits at rdiffweb.org)
Date: Thu, 21 Sep 2006 04:28:14 +0200
Subject: [Rdiffweb-commits] r64 - in trunk: . rdiffWeb rdiffWeb/templates
Message-ID: <200609210228.k8L2SEZf023115@sheep.berlios.de>

Author: joshn
Date: 2006-09-21 04:28:09 +0200 (Thu, 21 Sep 2006)
New Revision: 64

Modified:
   trunk/rdiff-web-config
   trunk/rdiffWeb/db_mysql.py
   trunk/rdiffWeb/page_admin.py
   trunk/rdiffWeb/rdw_spider_repos.py
   trunk/rdiffWeb/templates/admin_main.html
Log:
Changes to improve commandline user administration


Modified: trunk/rdiff-web-config
===================================================================
--- trunk/rdiff-web-config	2006-09-06 17:46:57 UTC (rev 63)
+++ trunk/rdiff-web-config	2006-09-21 02:28:09 UTC (rev 64)
@@ -81,6 +81,12 @@
    databases = [ x[0] for x in results]
    return databases
 
+def addUser(username, password, userRoot, isAdmin):
+   mysqlUserDb = rdiffWeb.db_mysql.mysqlUserDB()
+   mysqlUserDb.addUser(username)
+   mysqlUserDb.setUserPassword(username, password)
+   mysqlUserDb.setUserInfo(username, userRoot, isAdmin)
+
 def mysqlSetup():
    print "MySQL backend chosen.\n"
    # TODO: load default answers from existing config file, if any
@@ -148,7 +154,7 @@
    mysqlUserDb = rdiffWeb.db_mysql.mysqlUserDB()
    for createStatement in mysqlUserDb._getCreateStatements():
       executeQuery(sqlConnection, createStatement)
-   
+
    mysqlUserDb = rdiffWeb.db_mysql.mysqlUserDB()
 
    print "\nYou must now add the first user account.  This user will have admin privileges, and therefore will have the ability to add/delete other users."
@@ -171,19 +177,13 @@
    response = promptUser(prompt, ["yes", "no"], "yes", False)
    if response == "yes":
       try:
-         repos = rdiffWeb.rdw_spider_repos.findReposForUsers(username, mysqlUserDb)
+         repos = rdiffWeb.rdw_spider_repos.findReposForUser(username, mysqlUserDb)
       except OSError, error:
          print "Unable to search repository: " + str(error)
       else:
          print "Repository search complete."
 
-if __name__ == "__main__":
-   # Because this script manipulates files in the /etc directory, it must be run as root.  Validate
-   # that we're being run as root, before the user has spent a lot of time entering data.
-   if os.getuid() != 0:
-      print "Error: this script must be run as root."
-      sys.exit(2)
-
+def doMainSetup():
    addConfigFileLine("ServerName=localhost")
    addConfigFileLine("ServerPort=8080")
 
@@ -198,6 +198,29 @@
       fileSetup()
    else:
       mysqlSetup()
-
    print "Configuration complete!"
 
+def doSpiderRepos():
+   rdiffWeb.rdw_spider_repos.findReposForAllUsers()
+
+def doAddUser():
+   if len(sys.argv) != 5:
+      print "Usage: rdiff-web-config adduser <username> <password> </path/to/usr/root>"
+      sys.exit(2)
+
+   addUser(sys.argv[2], sys.argv[3], sys.argv[4], False)
+
+if __name__ == "__main__":
+   # Because this script manipulates files in the /etc directory, it must be run as root.  Validate
+   # that we're being run as root, before the user has spent a lot of time entering data.
+   if os.getuid() != 0:
+      print "Error: this script must be run as root."
+      sys.exit(2)
+
+   if len(sys.argv) > 1:
+      if sys.argv[1] == "adduser":
+         doAddUser()
+      elif sys.argv[1] == "spiderrepos":
+         doSpiderRepos()
+   else:
+      doMainSetup()

Modified: trunk/rdiffWeb/db_mysql.py
===================================================================
--- trunk/rdiffWeb/db_mysql.py	2006-09-06 17:46:57 UTC (rev 63)
+++ trunk/rdiffWeb/db_mysql.py	2006-09-21 02:28:09 UTC (rev 64)
@@ -62,7 +62,6 @@
       repoPaths = [ {"repo" : repo} for repo in repoPaths ]
       cursor = self.sqlConnection.cursor()
       cursor.executemany(query, repoPaths)
-      return cursor.fetchall()
 
    def setUserPassword(self, username, password):
       if not self.userExists(username): raise ValueError

Modified: trunk/rdiffWeb/page_admin.py
===================================================================
--- trunk/rdiffWeb/page_admin.py	2006-09-06 17:46:57 UTC (rev 63)
+++ trunk/rdiffWeb/page_admin.py	2006-09-21 02:28:09 UTC (rev 64)
@@ -113,6 +113,15 @@
       return page + self.endPage()
    editUser.exposed = True
 
+   def deleteUser(self, user):
+      if not self._userIsAdmin(): return self.writeErrorPage("Access denied.")
+      if not self.userDB.userExists(user): return
+
+      self.userDB.deleteUser(user)
+      return self.writeMessagePage("Success", "User account removed.")
+
+   deleteUser.exposed = True
+
    def changePassword(self, user, password=""):
       if not self._userIsAdmin(): return self.writeErrorPage("Access denied.")
       if not self.userDB.userExists(user): return
@@ -133,7 +142,7 @@
    def updateRepos(self, user):
       if not self._userIsAdmin(): return self.writeErrorPage("Access denied.")
       if not self.userDB.userExists(user): return
-      rdw_spider_repos.findReposForUsers(user, self.userDB)
+      rdw_spider_repos.findReposForUser(user, self.userDB)
       return self.writeMessagePage("Success", "Successfully updated repositories.")
    updateRepos.exposed = True
 

Modified: trunk/rdiffWeb/rdw_spider_repos.py
===================================================================
--- trunk/rdiffWeb/rdw_spider_repos.py	2006-09-06 17:46:57 UTC (rev 63)
+++ trunk/rdiffWeb/rdw_spider_repos.py	2006-09-21 02:28:09 UTC (rev 64)
@@ -3,7 +3,7 @@
 import os
 import db_mysql, rdw_helpers, librdiff
 
-def findRdiffRepos(dirToSearch, outRepoPaths):
+def _findRdiffRepos(dirToSearch, outRepoPaths):
    dirEntries = os.listdir(dirToSearch)
    if librdiff.rdiffDataDirName in dirEntries:
       print "   Found repo at " + dirToSearch
@@ -13,13 +13,13 @@
    for entry in dirEntries:
       entryPath = rdw_helpers.joinPaths(dirToSearch, entry)
       if os.path.isdir(entryPath) and not os.path.islink(entryPath):
-         findRdiffRepos(entryPath, outRepoPaths)
+         _findRdiffRepos(entryPath, outRepoPaths)
 
 
-def findReposForUsers(user, userDBModule):
+def findReposForUser(user, userDBModule):
    userRoot = userDBModule.getUserRoot(user)
    repoPaths = []
-   findRdiffRepos(userRoot, repoPaths)
+   _findRdiffRepos(userRoot, repoPaths)
 
    def stripRoot(path):
       if not path[len(userRoot):]:
@@ -29,13 +29,13 @@
    userDBModule.setUserRepos(user, repoPaths)
 
 
-def main():
+def findReposForAllUsers():
    userDBModule = db_mysql.mysqlUserDB()
    users = userDBModule.getUserList()
    for user in users:
       print "Adding repos for user %s..." % user
-      findReposForUsers(user, userDBModule)
+      findReposForUser(user, userDBModule)
 
 
 if __name__ == "__main__":
-   main()
+   findReposForAllUsers()

Modified: trunk/rdiffWeb/templates/admin_main.html
===================================================================
--- trunk/rdiffWeb/templates/admin_main.html	2006-09-06 17:46:57 UTC (rev 63)
+++ trunk/rdiffWeb/templates/admin_main.html	2006-09-21 02:28:09 UTC (rev 64)
@@ -7,7 +7,10 @@
 <!--StartRepeat:users-->
    <tr>
       <td>^username$</td>
-      <td><a href="/admin/editUser?user=^username$">Edit User</a></td><td><a href="/admin/changePassword?user=^username$">Change Password</a></td><td><a href="/admin/updateRepos?user=^username$">Find and update repositories</a></td>
+      <td><a href="/admin/editUser?user=^username$">Edit User</a></td>
+      <td><a href="/admin/deleteUser?user=^username$">Delete User</a></td>
+      <td><a href="/admin/changePassword?user=^username$">Change Password</a></td>
+      <td><a href="/admin/updateRepos?user=^username$">Find and update repositories</a></td>
    </tr>
 <!--EndRepeat:users-->
 </table>



